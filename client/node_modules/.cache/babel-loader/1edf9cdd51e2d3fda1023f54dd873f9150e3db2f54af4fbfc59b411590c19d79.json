{"ast":null,"code":"var _jsxFileName = \"/Users/nikhil/Desktop/Docs/UAlbany/DBS/POTDs/POTD_5/todo-app/client/src/App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState, useEffect } from \"react\";\nimport Navbar from \"./Navbar\";\nimport TodoForm from \"./TodoForm\";\nimport TodoTable from \"./TodoTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]); // All tasks\n  const [editTask, setEditTask] = useState(null); // Task currently being edited\n\n  // 1. Fetch tasks from backend\n  const fetchTasks = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5001/api/tasks\");\n      const data = await response.json();\n      setTasks(data);\n    } catch (error) {\n      console.error(\"Error fetching tasks:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  // 2. Handle form submission (add or update)\n  const handleFormSubmit = async formData => {\n    if (editTask) {\n      // Update task: Send PUT request\n      try {\n        const response = await fetch(`http://localhost:5001/api/tasks/${editTask.task_id}`, {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(formData)\n        });\n        await response.json();\n        setEditTask(null); // clear edit mode\n        fetchTasks(); // refresh task list\n      } catch (err) {\n        console.error(\"Error updating task:\", err);\n      }\n    } else {\n      // Add new task: Send POST request\n      try {\n        const response = await fetch(\"http://localhost:5001/api/tasks\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(formData)\n        });\n        await response.json();\n        fetchTasks(); // refresh task list\n      } catch (err) {\n        console.error(\"Error adding task:\", err);\n      }\n    }\n  };\n\n  // 3. When user clicks Update on a row, set that task as the edit task\n  const handleEditClick = task => {\n    setEditTask(task);\n  };\n\n  // 4. Clear edit mode (e.g., when clicking clear form)\n  const clearEdit = () => {\n    setEditTask(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"font-serif\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      onFormSubmit: handleFormSubmit,\n      editTask: editTask,\n      clearEdit: clearEdit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoTable, {\n      tasks: tasks,\n      onEditClick: handleEditClick,\n      fetchTasks: fetchTasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ELC/NP/DZmfG3NcRIvxLoMDVlnI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","TodoForm","TodoTable","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","editTask","setEditTask","fetchTasks","response","fetch","data","json","error","console","handleFormSubmit","formData","task_id","method","headers","body","JSON","stringify","err","handleEditClick","task","clearEdit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onFormSubmit","onEditClick","_c","$RefreshReg$"],"sources":["/Users/nikhil/Desktop/Docs/UAlbany/DBS/POTDs/POTD_5/todo-app/client/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState, useEffect } from \"react\";\nimport Navbar from \"./Navbar\";\nimport TodoForm from \"./TodoForm\";\nimport TodoTable from \"./TodoTable\";\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);       // All tasks\n  const [editTask, setEditTask] = useState(null); // Task currently being edited\n\n  // 1. Fetch tasks from backend\n  const fetchTasks = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5001/api/tasks\");\n      const data = await response.json();\n      setTasks(data);\n    } catch (error) {\n      console.error(\"Error fetching tasks:\", error);\n    }\n  };\n\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  // 2. Handle form submission (add or update)\n  const handleFormSubmit = async (formData) => {\n    if (editTask) {\n      // Update task: Send PUT request\n      try {\n        const response = await fetch(\n          `http://localhost:5001/api/tasks/${editTask.task_id}`,\n          {\n            method: \"PUT\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(formData),\n          }\n        );\n        await response.json();\n        setEditTask(null); // clear edit mode\n        fetchTasks();      // refresh task list\n      } catch (err) {\n        console.error(\"Error updating task:\", err);\n      }\n    } else {\n      // Add new task: Send POST request\n      try {\n        const response = await fetch(\"http://localhost:5001/api/tasks\", {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify(formData),\n        });\n        await response.json();\n        fetchTasks(); // refresh task list\n      } catch (err) {\n        console.error(\"Error adding task:\", err);\n      }\n    }\n  };\n\n  // 3. When user clicks Update on a row, set that task as the edit task\n  const handleEditClick = (task) => {\n    setEditTask(task);\n  };\n\n  // 4. Clear edit mode (e.g., when clicking clear form)\n  const clearEdit = () => {\n    setEditTask(null);\n  };\n\n  return (\n    <div className=\"font-serif\">\n      <Navbar />\n      {/* Pass down the current editTask, form submit handler, and clearEdit */}\n      <TodoForm\n        onFormSubmit={handleFormSubmit}\n        editTask={editTask}\n        clearEdit={clearEdit}\n      />\n      {/* Pass down tasks and the edit click handler */}\n      <TodoTable tasks={tasks} onEditClick={handleEditClick} fetchTasks={fetchTasks} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}